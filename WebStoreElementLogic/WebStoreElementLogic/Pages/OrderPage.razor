@page "/orderpage"
@using WebStoreElementLogic.Entities;


<div class="d-flex flex-row mx-5 rounded">
    <input name="search" type="text" class="form-control" @bind="searchTerm" @bind:event="oninput">
    <button @onclick="Search" class="btn btn-primary">Search</button>
</div>
<div class="container-fluid">
    <div class="row">
        @for (int i = 0; i < Products.Count; i++)
        {
            <ProductTile Product="@Products[i]" 
            Index="i" 
            OnSelected="SelectProduct" 
            Selected="SelectedIndex == i"  />
        }
        @if (Products == null)
        {
            <h3>Loading Products...</h3>
        }
    </div>
</div>

@if(ShowModal)
{
    <ProductModal Product="@Products[SelectedIndex]" Index="SelectedIndex" OnCancelEvent="() =>ShowModal = false" />
}


@code {

    private void SelectProduct(int index)
    {
        SelectedIndex = index;
        Console.Write(SelectedIndex);
        ShowModal = true;
        StateHasChanged();
    }

    private int SelectedIndex = -1;

    private bool ShowModal = false;

    private List<Product> ProductsCopy = new List<Product>();

    private List<Product> Products = Product.generateList(35);

    private string searchTerm = "";

    private void Search() 
    {
        FillCopy(searchTerm);
    }

    private void FillCopy(string term) 
    {
        ProductsCopy.Clear();
        foreach(Product info in Products) 
        {
            if(term == "" || info.Name == null)
            {
                ProductsCopy.Add((Product) info.Clone());
            } 
            else
            {
                if(info.Name.ToLower().Contains(term.ToLower())) 
                {
                    ProductsCopy.Add((Product) info.Clone());
                }
            }
        }
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        FillCopy("");
    }

}

