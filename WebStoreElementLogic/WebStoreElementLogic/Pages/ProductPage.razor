@page "/productpage"
@using Data

@if(DeleteAlert)
{
    <Alert OnCancel="CancelDelete">
        <h3>Delete Product</h3>
        Are you sure you wish to delete @Products[SelectedIndex].Name?
        <div class="d-flex flex-row justify-content-around">
            <button @onclick="CancelDelete" class="btn btn-success mt-3">Cancel</button>
            <button @onclick="Delete" class="btn btn-danger mt-3">Delete</button>
        </div>
    </Alert>
}

<div class="d-flex justify-content-between">
    <div class="container-fluid">
        @for(int i = 0;i < Products.Count;i++)
        {
            <ProductListItem
                Info="Products[i]"
                Index="i" 
                OnSelected="SelectProduct" 
                Selected="SelectedIndex == i" />
        }
    </div>
    <div class="container-fluid d-flex justify-content-center">
        @if(SelectedIndex >= 0)
        {
            <ProductForm 
                Info="Products[SelectedIndex]"
                Copy="(ProductInfo) Products[SelectedIndex].Clone()" 
                OnSave="SaveHandler"
                OnDelete="DeleteHandler"/>
        }
    </div>
</div>

@code {
    public List<ProductInfo> Products = ProductInfo.generateList(25);

    private bool DeleteAlert = false;

    private int SelectedIndex = -1;

    private void SelectProduct(int index)
    {
        SelectedIndex = index;
    }

    private void SaveHandler()
    {
        StateHasChanged();
    }

    private void DeleteHandler()
    {
        DeleteAlert = true;
    }

    private void CancelDelete()
    {
        DeleteAlert = false;
    }

    private void Delete()
    {
        DeleteAlert = false;
        Products.RemoveAt(SelectedIndex);
        SelectedIndex = -1;
    }

}
