@page "/productpage"
@using Data

@if(DeleteAlert)
{
    <Alert OnCancel="CancelDelete">
        <h3>Delete Product</h3>
        Are you sure you wish to delete 
        <span class="text-danger text-decoration-underline">@Products[SelectedIndex].Name?</span>
        <div class="d-flex flex-row justify-content-around">
            <button @onclick="CancelDelete" class="btn btn-success mt-3">Cancel</button>
            <button @onclick="Delete" class="btn btn-danger mt-3">Delete</button>
        </div>
    </Alert>
}
<div class="d-flex justify-content-between">
    <div class="container-fluid">
        @for(int i = 0;i < Products.Count;i++)
        {
            <ProductListItem
                Info="Products[i]"
                Index="i" 
                OnSelected="SelectProduct" 
                Selected="SelectedIndex == i" />
        }
    </div>
    <div class="container-fluid">

        <button class="btn btn-primary mt-2 bottom-0 mb-4 rounded-pill position-fixed align-self-end d-block" 
        style="z-index: 3; transform: translateX(-5vw);"
        @onclick="New">
            <h3>new</h3>
        </button>

        <div class="container-fluid position-fixed w-50 pe-4">
        @if(SelectedIndex >= 0)
        {
            <ProductForm
                Title="Edit product"
                SaveLabel="Save changes"
                DiscardLabel="Discard changes"
                DeleteButton
                Info="Products[SelectedIndex]"
                Copy="(ProductInfo) Products[SelectedIndex].Clone()"
                OnSave="SaveHandler"
                OnDelete="DeleteHandler" />
        }
        @if(AddNew)
        {
            <ProductForm
                Title="Add new product"
                SaveLabel="Add"
                DiscardLabel="Cancel"
                Info="newInfo"
                Copy="new ProductInfo()"
                OnSave="SaveHandler"
                OnDiscard="Discard" />
        }
        </div>
    </div>
</div>

@code {
    public List<ProductInfo> Products = ProductInfo.generateList(10);

    private ProductInfo newInfo = new ProductInfo();
    private bool AddNew = false;
    private bool DeleteAlert = false;
    private int SelectedIndex = -1;

    private void SelectProduct(int index)
    {
        AddNew = false;
        SelectedIndex = index;
    }

    private void SaveHandler()
    {
        if(AddNew)
        {
            Products.Add(newInfo);
            AddNew = false;
        }
        StateHasChanged();
    }

    private void DeleteHandler()
    {
        DeleteAlert = true;
    }

    private void CancelDelete()
    {
        DeleteAlert = false;
    }

    private void Delete()
    {
        DeleteAlert = false;

        if(SelectedIndex >= 0) 
        {
            Products.RemoveAt(SelectedIndex);
            SelectedIndex = -1;
        }
    }

    private void New() 
    {
        newInfo = new ProductInfo();
        SelectedIndex = -1;
        AddNew = true;

        StateHasChanged();
    }

    private void Discard()
    {
        AddNew = false;
        StateHasChanged();
    }

}
